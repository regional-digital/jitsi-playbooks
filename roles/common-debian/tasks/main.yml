---
- name: check if ssh on defined port running
  wait_for:
    port: "{{ ssh_port }}"
    state: "started"
    host: "{{ inventory_hostname }}"
    connect_timeout: "5"
    timeout: "10"
  delegate_to: "localhost"
  ignore_errors: "yes"
  register: final_ssh

- name: Set configured port fact
  set_fact:
    configured_port: "{{ ansible_port }}"
  when: final_ssh is defined and final_ssh.failed == True

- name: Set inventory ansible_port to default
  set_fact:
    ansible_port: "22"
  when: final_ssh is defined and final_ssh.failed == True

- name: generate /etc/ssh/sshd_config
  template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: "0644"
  notify:
    - restart sshd

- name: Set a hostname
  hostname:
    name: "{{ fqdn }}"

- name: Install system tools and utilities
  apt:
    name: 
      - sudo
      - wget
      - curl
      - python-apt-common
      - apt-transport-https
      - gpg
      - gpg-agent
      - bash-completion
      - jq
      - dnsutils
      - htop
      - tmux
      - vim
      - multitail
      - vlan
    update_cache: yes

- name: create users
  command: adduser --gecos "" --disabled-password {{ item }}
  args:
    creates: /home/{{ item }}
  with_items: "{{ users }}"

- name: adding existing users to groups sudo
  user:
    name: '{{ item }}'
    groups: sudo
    append: yes
  with_items: "{{ users }}"

- name: "Allow sudo users to sudo without a password"
  lineinfile:
    dest: "/etc/sudoers"
    state: "present"
    regexp: "^%sudo"
    line: "%sudo\tALL=(ALL:ALL) NOPASSWD:ALL"
    validate: '/usr/sbin/visudo -cf %s'
    backup: yes

- name: "Add authorized keys"
  authorized_key:
    user: "{{ item }}"
    key: "{{ lookup('file', filePathPrefix + '/'+ item + '.key.pub') }}"
  with_items: "{{ users }}"
  when: users is defined

- name: generate /etc/sysctl.d/30-disable-ipv6.conf (disable IPv6)
  template:
    src: 30-disable-ipv6.conf.j2
    dest: /etc/sysctl.d/30-disable-ipv6.conf
    owner: root
    group: root
    mode: "0644"
  notify:
    - systemctl apply

- name: generate /etc/network/interfaces.d/99_vlan_{{ privateVLANID }}.conf
  template:
    src: 99_vlan.conf.j2
    dest: /etc/network/interfaces.d/99_vlan_{{ privateVLANID }}.conf
    owner: root
    group: root
    mode: "0644"
  when: private_vlan_ip is defined
  register: vlan

- name: ifup vlan if vlan changed
  command: ifup {{ ansible_default_ipv4.interface }}.{{ privateVLANID }}
  when: vlan.changed

- name: edit hosts 1
  blockinfile:
    path: /etc/hosts
    marker: "## {mark} ANSIBLE MANAGED BLOCK 1 ##"
    block: "{{ hostsblock1 }}"
    backup: yes
  when: private_vlan_ip is defined

- name: edit hosts 2
  blockinfile:
    path: /etc/hosts
    marker: "## {mark} ANSIBLE MANAGED BLOCK 2 ##"
    block: |
      127.0.0.1 localhost.localdomain localhost {{ inventory_hostname  }} {{ fqdn  }}
    backup: yes

- name: create folder for packages
  file:
    path: /opt/ansiblepackages
    state: directory
    owner: root
    group: root
    mode: '0600'